//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ifly.HelpRepositoryService {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Topics {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Topics() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ifly.HelpRepositoryService.Topics", typeof(Topics).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string elements_gallery {
            get {
                return ResourceManager.GetString("elements_gallery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Table of contents
        ///
        ///- [Managing infographics](#presentations.manage)
        ///    - [Creating new infographic](#presentations.create)
        ///    - [Updating infographic settings](#presentations.edit)
        ///    - [Cloning an infographic](#presentations.clone)
        ///    - [Sharing an inographic](#presentations.share)
        ///    - [Archiving an infographic](#presentations.arhive)
        ///- [Styling an infographic](#styling)
        ///    - [Using themes](#styling.themes)
        ///    - [Creating new theme with Sprites](#styling.themes.wizard)
        ///    - [Uploading [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Cloning an infographic
        ///
        ///Cloning an existing infographic will copy all the slides, elements and settings into a new infographic with the different name. The new infographic will also have a different URL so that you can publish and share it independently of the original.
        ///
        ///To clone an infographic open its [Settings](#presentations.edit) and click the little &quot;Clone&quot; link in the top right corner of the modal window. Clicking that link will bring up another window, which allows you to specify the following [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string presentations_clone {
            get {
                return ResourceManager.GetString("presentations_clone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Creating new infographic
        ///
        ///When you log into Sprites for the first time, you are presented with the modal dialog asking you to create your first infographic. Creating an infographic only requires a couple of things:
        ///
        ///- **Title** This is how your infographic will be named. People will be able to see this name when they open your infographic for viewing. The title can be changed at any time via [Settings](#presentations.edit) screen.
        ///- **Theme** This allows you to pick a distinctive design for your new  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string presentations_create {
            get {
                return ResourceManager.GetString("presentations_create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Updating infographic settings
        ///
        ///Changing settings of an existing infographic is done by [opening it](#presentations.manage) and choosing &quot;Settings&quot; in the main navigation pane (left-hand side). A modal window that pops up offers the following to be changed:
        ///
        ///- **Title** This allows you to change the public name of your infographic.
        ///- **Theme** You can change a [visual theme](#styling) of your infographic without affecting your data (you may need to tweak the placements of certain elements though).
        ///-  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string presentations_edit {
            get {
                return ResourceManager.GetString("presentations_edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Managing infographics
        ///
        ///With Sprites, you can create as many infographics as you want. All your infographics are private unless you [publish them](#presentations.publish) or share the URL with other people. 
        ///
        ///Your infographics are available under &quot;My account&quot; menu (a button with your name and a small &quot;persona&quot; icon at top right corner of the Sprites editor window). The list can be divided into three sections:
        ///
        ///- **Your infographics** The content created by you.
        ///- **Shared infographics** The content  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string presentations_manage {
            get {
                return ResourceManager.GetString("presentations_manage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string presentations_publish {
            get {
                return ResourceManager.GetString("presentations_publish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string slides_create {
            get {
                return ResourceManager.GetString("slides_create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string slides_edit {
            get {
                return ResourceManager.GetString("slides_edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string slides_manage {
            get {
                return ResourceManager.GetString("slides_manage", resourceCulture);
            }
        }
    }
}
